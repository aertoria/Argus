/* Generated By:JavaCC: Do not edit this line. AnnotationReaderConstants.java */
/* Copyright (c) 2014, Salesforce.com, Inc.
 * All rights reserved.
 *  
 * Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
 *   
 *      Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
 *
 *      Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the
 *      documentation and/or other materials provided with the distribution.
 *
 *      Neither the name of Salesforce.com nor the names of its contributors may be used to endorse or promote products derived from this software
 *      without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */

package com.salesforce.dva.argus.service.annotation;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface AnnotationReaderConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COLON = 5;
  /** RegularExpression Id. */
  int COMMA = 6;
  /** RegularExpression Id. */
  int HYPHEN = 7;
  /** RegularExpression Id. */
  int LEFT_CURLY = 8;
  /** RegularExpression Id. */
  int RIGHT_CURLY = 9;
  /** RegularExpression Id. */
  int LEFT_PARENTHESIS = 10;
  /** RegularExpression Id. */
  int RIGHT_PARENTHESIS = 11;
  /** RegularExpression Id. */
  int TIME_UNIT = 12;
  /** RegularExpression Id. */
  int TIME = 13;
  /** RegularExpression Id. */
  int TSDB_ALLOWED_TEXT = 14;
  /** RegularExpression Id. */
  int TAGS = 15;
  /** RegularExpression Id. */
  int TAG = 16;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "\":\"",
    "\",\"",
    "\"-\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "<TIME_UNIT>",
    "<TIME>",
    "<TSDB_ALLOWED_TEXT>",
    "<TAGS>",
    "<TAG>",
  };

}
